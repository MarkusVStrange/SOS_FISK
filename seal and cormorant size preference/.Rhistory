prey =rep(c("cod","flatfish","other"),each=4*n_year),
diet=c(rep(df_seal$cod,each=4),rep(df_seal$flatfish,each=4),rep(df_seal$other,each=4)),
predator=rep("grey seal",3*4*n_year))
pred_diet <- rbind(df_c,df_s)
pred_diet <- aggregate(diet~prey+quarter+year+predator,data=pred_diet,FUN=mean)
write.table(pred_diet,paste(data_wd,"pred_diet.csv",sep=""),row.names = FALSE,sep=';')
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
setwd("~/GitHub/SOS_FISK/Consumption")
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
source('getConsumption.R')
source('getConsPlot.R')
source('getDietPlot.R')
# predator abundance
Predators <- getPredators(years = 1991:2023,species = c('cormorant','grey seal'))
# predator diets
Diets <- getDiets(Predators,method='data') # takes a little while
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='model')
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
source('getConsumption.R')
source('getConsPlot.R')
source('getDietPlot.R')
# predator abundance
Predators <- getPredators(years = 1991:2023,species = c('cormorant','grey seal'))
# predator diets
Diets <- getDiets(Predators,method='data') # takes a little while
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='model')
data_wd <- paste(dirname(dirname(getwd())),"/SOS data/",sep="") # data working directory
data_wd
diet_pred <- read.table(paste(data_wd,"pred_diet.csv",sep=""),header=TRUE,sep=';')
# cormorant diet
corm.diet <- Diets %>% filter(predator=='cormorant')
energy_weight <- aggregate(diet~prey,data=corm.diet %>% filter(!(prey %in% c("cod","flatfish"))),FUN=mean)
energy_weight$weight <- energy_weight$diet/sum(energy_weight$diet)
corm.diet <- diet_pred %>% filter(predator=='cormorant')
# energy requirement for a cormorant
corm_energy_demand <- 2094 # kJ/day/bird (Keller & Visser, 1999) - Winter value for P. carbo sinensis.
# relevant prey species
energy_density <- data.frame(species = c("cod","eelpout","flatfish","goby","herring","other","sandeel","sculpin"),
kJ_pr._g_Ww = c(4.9,3.4,5.7,5.56,mean(c(6.21,9.73)),mean(c(4.9,5.7,mean(c(6.21,9.73)),4.2,5.93,3.22,3.4)),5.93,3.22)) # kJ/g Ww
# Atlantic cod (mean from M책rtenssen et al., 1996)
# eelpout (Eder & Lewis 2005)
# flatfish (Pleuronectiformes from Spitz et al., 2010)
# goby (Jane Behrens data)
# Atlantic herring (mean from M책rtenssen et al., 1996). Assuming a 1:1 distribution of immature (6.21 kJ/g) and mature (9.73 kJ/g)
# sandeel (Karlsen & Andersen, 2011)
# sculpin (great sculpin from Anthony et al., 2000)
# other (mean of the other species)
energy_density <- c(energy_density$kJ_pr._g_Ww[1],energy_density$kJ_pr._g_Ww[3],
sum(energy_density$kJ_pr._g_Ww[-c(1,3)]*energy_weight$weight))
# calculate the biomass eaten as the energy demand for a bird divided by the energy density for prey, distributed out according to the weight-based diet
corm.diet$g_eaten <- corm.diet$diet*corm_energy_demand/energy_density #g/day/bird
corm.diet <- corm.diet[,names(E.budget)]
E.budget <- rbind(E.budget,corm.diet)
E.budget <- data.frame(year = NA,quarter=NA,prey=NA,g_eaten=NA,predator=NA)
data_wd <- paste(dirname(dirname(getwd())),"/SOS data/",sep="") # data working directory
diet_pred <- read.table(paste(data_wd,"pred_diet.csv",sep=""),header=TRUE,sep=';')
# cormorant diet
corm.diet <- Diets %>% filter(predator=='cormorant')
energy_weight <- aggregate(diet~prey,data=corm.diet %>% filter(!(prey %in% c("cod","flatfish"))),FUN=mean)
energy_weight$weight <- energy_weight$diet/sum(energy_weight$diet)
corm.diet <- diet_pred %>% filter(predator=='cormorant')
# energy requirement for a cormorant
corm_energy_demand <- 2094 # kJ/day/bird (Keller & Visser, 1999) - Winter value for P. carbo sinensis.
# relevant prey species
energy_density <- data.frame(species = c("cod","eelpout","flatfish","goby","herring","other","sandeel","sculpin"),
kJ_pr._g_Ww = c(4.9,3.4,5.7,5.56,mean(c(6.21,9.73)),mean(c(4.9,5.7,mean(c(6.21,9.73)),4.2,5.93,3.22,3.4)),5.93,3.22)) # kJ/g Ww
# Atlantic cod (mean from M책rtenssen et al., 1996)
# eelpout (Eder & Lewis 2005)
# flatfish (Pleuronectiformes from Spitz et al., 2010)
# goby (Jane Behrens data)
# Atlantic herring (mean from M책rtenssen et al., 1996). Assuming a 1:1 distribution of immature (6.21 kJ/g) and mature (9.73 kJ/g)
# sandeel (Karlsen & Andersen, 2011)
# sculpin (great sculpin from Anthony et al., 2000)
# other (mean of the other species)
energy_density <- c(energy_density$kJ_pr._g_Ww[1],energy_density$kJ_pr._g_Ww[3],
sum(energy_density$kJ_pr._g_Ww[-c(1,3)]*energy_weight$weight))
# calculate the biomass eaten as the energy demand for a bird divided by the energy density for prey, distributed out according to the weight-based diet
corm.diet$g_eaten <- corm.diet$diet*corm_energy_demand/energy_density #g/day/bird
corm.diet <- corm.diet[,names(E.budget)]
E.budget <- rbind(E.budget,corm.diet)
rm(list=setdiff(ls(),c('E.budget','Diets','method')))
diet_pred <- read.table(paste(data_wd,"pred_diet.csv",sep=""),header=TRUE,sep=';')
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
source('getConsumption.R')
source('getConsPlot.R')
source('getDietPlot.R')
# predator abundance
Predators <- getPredators(years = 1991:2023,species = c('cormorant','grey seal'))
# predator diets
Diets <- getDiets(Predators,method='data') # takes a little while
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='model')
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
source('getConsumption.R')
source('getConsPlot.R')
source('getDietPlot.R')
# predator abundance
Predators <- getPredators(years = 1991:2023,species = c('cormorant','grey seal'))
# predator diets
Diets <- getDiets(Predators,method='data') # takes a little while
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='model')
# the total consumption (tonnes) of selected prey fish by the predators
consumption <- getConsumption(g_eaten,Predators)
# plot the consumption compared to the fishery
getConsPlot(prey='cod',consumption,type="total")
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
source('getConsumption.R')
source('getConsPlot.R')
source('getDietPlot.R')
# predator abundance
Predators <- getPredators(years = 1991:2023,species = c('cormorant','grey seal'))
# predator diets
Diets <- getDiets(Predators,method='data') # takes a little while
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='data')
# the total consumption (tonnes) of selected prey fish by the predators
consumption <- getConsumption(g_eaten,Predators)
# plot the consumption compared to the fishery
getConsPlot(prey='cod',consumption,type="total")
# plot the diets
getDietPlot(predators=c('cormorant','grey seal'),Diets,year=c(1997)) # this is weight-based diets and n denote number of excrements
p <- getConsPlot(prey='cod',consumption,type="proportions")
p
p <- getConsPlot(prey='cod',consumption,type="total")
p
# plot the consumption compared to the fishery
getConsPlot(prey='cod',consumption,type="total")
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='model')
# the total consumption (tonnes) of selected prey fish by the predators
consumption <- getConsumption(g_eaten,Predators)
# plot the consumption compared to the fishery
getConsPlot(prey='cod',consumption,type="total")
p <- getConsPlot(prey='cod',consumption,type="total")
p
# packages required
library(ggplot2)
library(dplyr)
library(egg)
library(smsR)
# read in functions from other scripts
source('getPredators.R')
source('getDiets.R')
source('getEnergyBudget.R')
source('getConsumption.R')
source('getConsPlot.R')
source('getDietPlot.R')
# predator abundance
Predators <- getPredators(years = 1991:2023,species = c('cormorant','grey seal'))
# predator diets
Diets <- getDiets(Predators,method='data') # takes a little while
# how much fish (g) the predators eat of selected prey fish
g_eaten <- getEnergyBudget(Diets,method='model')
# the total consumption (tonnes) of selected prey fish by the predators
consumption <- getConsumption(g_eaten,Predators)
# plot the consumption compared to the fishery
getConsPlot(prey='cod',consumption,type="total")
# plot the diets
getDietPlot(predators=c('cormorant','grey seal'),Diets,year=c(1997)) # this is weight-based diets and n denote number of excrements
p <- getConsPlot(prey='cod',consumption,type="total")
p
ggsave("plots/consumption.png",p,width=7,height=6)
remotes::install_github("DTUAqua/DATRAS/DATRAS")
library(surveyIndex)
library(DATRAS)
downloadExchange("BITS",1985)
?downloadExchange
system("php -v")
source('estimate uncertainty on coefficients.R')
setwd("~/GitHub/SOS_FISK/seal and cormorant size preference")
source('estimate uncertainty on coefficients.R')
data_wd <- paste(dirname(dirname(getwd())),"/SOS data/",sep="")
# Define cod functions and read data
#####
# Growth model, cohort spread by length, and individuals at by age and time, functions: vbgr.fixed(), vbgr.sd(), N_age
vbgrCod <- function(age){ # von Bertalanffy growth rate. Parameters from McQueen et al., 2019 with fixed hatching time
# define growth parameters
Linf <- 97.9 # cm. McQueen et al., 2019
L_hatch <- 0.4 # length at hatching, cm (Pepin et al, 1997)
k <- 0.22 # vbgr growth rate, from McQueen
u <- 0.23 # Amplitude of seasonality
w <- 0.91 # Timing of peak growth
#t_hatch <- ((46+135)/2)/365 # time of hatching, Julian day / 365 - spawning from Feb. to May (Fiskeatlas), average set to April 1st
t_hatch <- ((16+197)/2)/365 # time of hatching, Julian day / 365 - spawning from Jan. to July (a bit arbitrary from H체ssy et al., 2011), average set to peak spawning
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth
L_t <- (L_hatch-Linf)*exp(-k*(phi_t+age-phi_hatch))+Linf # vbgr estimated length
return(L_t)
}
vbgr.sdCod <- function(age,n){ # von Bertalanffy growth rate. Parameters from McQueen et al., 2019 and estimated
# t in fraction year, Julian day/365
Linf <- rnorm(n,mean=97.9,sd=cod_sd_coef[3]) # Assymptotic length - with stochasticity
#Linf <- 154.56 # cm
L_hatch <- 0.4 # length at hatching, cm (Pepin et al, 1997)
#t_hatch <- ((46+135)/2)/365
t_hatch <- ((16+197)/2)/365 # time of hatching, Julian day / 365 - spawning from Jan. to July (a bit arbitrary from H체ssy et al., 2011), average set to peak spawning
k <- rnorm(n,mean=0.22,sd=cod_sd_coef[1]) # vbgr growth rate
u <- 0.23 # Amplitude of seasonality
w <- 0.91 # Timing of peak growth
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth
sd <- rep(0,length(t))
for (i in 1:length(sd)){
fish.age <- age[i]+rnorm(n,mean=0,sd=cod_sd_coef[2]) # time of hatching with stochasticity, Julian day / 365 - mean = march 1st
L_t <- (L_hatch-Linf)*exp(-k*(phi_t[i]+fish.age-phi_hatch))+Linf # vbgr estimated length
sd[i] <- sd(L_t)
}
return(sd)
}
N_ageCod <- function(dat,age,yrs){ # Number of individuals by age
dat$Z <- dat$M_var+dat$Fest
Ns <- matrix(rep(0,(length(age)+1)*length(yrs)*365),ncol = length(age)+1)
Ns[,length(age)+1] <- rep(yrs,each=365)
x <- seq(1/365,1,length=365)
for(i in 1:length(yrs)){
for(j in 1:length(age)){
di <- dat %>% filter(ages==age[j] & years==yrs[i])
dip1 <- dat %>% filter(ages==(age[j]+1) & years==(yrs[i]+1))
Ns[(365*(i-1)+1):(365*i),j] <- di$N*exp(-x*di$Z)
}
}
return(Ns)
}
Cod <- read.table(paste(data_wd,'M_sms.csv',sep=""),sep=';',header=TRUE)
#Cod$N <- readRDS('data/sms_mortality.RDS')$N$N
cormorant <- read.table(paste(data_wd,'corm_diet.csv',sep=""),sep=';',header=TRUE)
gseal <- read.table(paste(data_wd,'gSeal_diet.csv',sep=""),sep=';',header=TRUE)
gseal <- gseal %>% filter(Site!="Utklippan")
#####
# Define herring functions and read data
#####
vbgrHerring <- function(age){ # von Bertalanffy growth rate for herring.
#Parameters 2005-2010 for Western Baltic spring spawning herring (Gr철hsler et al., 2013)
Linf <- 30.57 # cm
k <- 0.453 # from table 2 in Gr철hsler et al, 2013
hatching <- c(92,92,94,96,99,103,106,109,111,118,118,122,126,134,135,143)/365
t_hatch <- mean(hatching) # From figure 4 in Polte et al., 2021
#t_hatch <- rnorm(n,mean=mean(hatching)*365,sd=7.5) # From figure 4 in Polte et al., 2021. Mean is from 4A sd is based on 4B
L_hatch <- 0.645 # figure 2 in Bauer et al., 2014
u <- 0.23 # Amplitude of seasonality
w <- 0.91 # Timing of peak growth
#t_hatch <- ((46+135)/2)/365 # time of hatching, Julian day / 365 - spawning from Feb. to May (Fiskeatlas), average set to April 1st
t_hatch <- ((16+197)/2)/365 # time of hatching, Julian day / 365 - spawning from Jan. to July (a bit arbitrary from H체ssy et al., 2011), average set to peak spawning
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth
L_t <- (L_hatch-Linf)*exp(-k*(phi_t+age-phi_hatch))+Linf# vbgr estimated length
return(L_t)
}
vbgr.sdHerring <- function(age,n){ # von Bertalanffy growth rate for herring.
#Parameters 2005-2010 for Western Baltic spring spawning herring (Gr철hsler et al., 2013)
Linf <- rnorm(n,mean=30.57,sd=herring_sd_coef[3])
k <- rnorm(n,0.453,herring_sd_coef[1]) # from table 2 in Gr철hsler et al, 2013
L_hatch <- 0.645 # figure 2 in Bauer et al., 2014
hatching <- c(92,92,94,96,99,103,106,109,111,118,118,122,126,134,135,143)/365
t_hatch <- mean(hatching) # From figure 4 in Polte et al., 2021
u <- 0.23 # Amplitude of seasonality
w <- 0.91 # Timing of peak growth
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth
sd <- rep(0,length(t))
for (i in 1:length(sd)){
fish.age <- age[i]+rnorm(n,mean=0,sd=herring_sd_coef[2]) # time of hatching with stochasticity, Julian day / 365 - mean = march 1st
L_t <- (L_hatch-Linf)*exp(-k*(phi_t[i]+fish.age-phi_hatch))+Linf # vbgr estimated length
sd[i] <- sd(L_t)
}
return(sd)
}
N_ageHerring <- function(dat,age,yrs){ # Number of individuals by age - Model N is from the start of the year
Ns <- matrix(rep(0,(length(age)+1)*length(yrs)*365),ncol = length(age)+1)
Ns[,length(age)+1] <- rep(yrs,each=365)
x <- seq(1/365,1,length=365)
for(i in 1:length(yrs)){
for(j in 1:length(age)){
di <- Herring %>% filter(ages==age[j] & years==yrs[i])
dip1 <- Herring %>% filter(ages==(age[j]+1) & years==(yrs[i]+1))
Ns[(365*(i-1)+1):(365*i),j] <- di$N*exp(-x*di$Z)
}
}
return(Ns)
}
Herring <- read.table(paste(data_wd,'Herring.csv',sep=""),sep=';',header=TRUE)
#####
# Define Flatfish functions and read data
#####
# define flounder growth function
vbgrFlounder <- function(age) {
Linf <- 34.0031653 # estimated in "fit flatfish growths from DATRAS"
k <- 0.4537312  # estimated in "fit flatfish growths from DATRAS"
L_hatch <- mean(c(0.697,0.662)) # mean from Kennedy et al., 2007
u <- 0.23 # Amplitude of seasonality (same as cod)
w <- 0.91 # Timing of peak growth
t_hatch <- ((75+197)/2)/365 # time of hatching, Julian day / 365 - from fiskeatlas
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth at hatching
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
L_t <- (L_hatch-Linf)*exp(-k*(phi_t+age-phi_hatch))+Linf
return(L_t)
} #Original
vbgr.sdFlounder <- function(age,n){
#Parameters 2005-2010 for Western Baltic spring spawning herring (Gr철hsler et al., 2013)
Linf <- rnorm(n,mean=34.0031653,sd=flounder_sd_coef[3])
k <- rnorm(n,0.4537312,flounder_sd_coef[1]) # from table 2 in Gr철hsler et al, 2013
L_hatch <- mean(c(0.697,0.662)) # mean from Kennedy et al., 2007
u <- 0.23 # Amplitude of seasonality (same as cod)
w <- 0.91 # Timing of peak growth
t_hatch <- ((75+197)/2)/365 # time of hatching, Julian day / 365 - from fiskeatlas
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth at hatching
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
sd <- rep(0,length(t))
for (i in 1:length(sd)){
fish.age <- age[i]+rnorm(n,mean=0,sd=flounder_sd_coef[2]) # time of hatching with stochasticity, Julian day / 365 - mean = march 1st
L_t <- (L_hatch-Linf)*exp(-k*(phi_t[i]+fish.age-phi_hatch))+Linf # vbgr estimated length
sd[i] <- sd(L_t)
}
return(sd)
}
# define plaice growth function
vbgrPlaice <- function(age) {
Linf <- 41.637260  # estimated in "fit flatfish growths from DATRAS"
k <- 0.240703   # estimated in "fit flatfish growths from DATRAS"
L_hatch <- mean(c(0.697,0.662)) # mean from Kennedy et al., 2007
u <- 0.23 # Amplitude of seasonality (same as cod)
w <- 0.91 # Timing of peak growth
t_hatch <- ((-46+75)/2)/365 # time of hatching, Julian day / 365 - from fiskeatlas
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth at hatching
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
L_t <- (L_hatch-Linf)*exp(-k*(phi_t+age-phi_hatch))+Linf
return(L_t)
} #Original
vbgr.sdPlaice <- function(age,n){
#Parameters 2005-2010 for Western Baltic spring spawning herring (Gr철hsler et al., 2013)
Linf <- rnorm(n,mean=41.637260,sd=plaice_sd_coef[3])
k <- rnorm(n,0.240703,plaice_sd_coef[1]) # from table 2 in Gr철hsler et al, 2013
L_hatch <- mean(c(0.697,0.662)) # mean from Kennedy et al., 2007
u <- 0.23 # Amplitude of seasonality (same as cod)
w <- 0.91 # Timing of peak growth
t_hatch <- ((-46+75)/2)/365 # time of hatching, Julian day / 365 - from fiskeatlas
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth at hatching
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
sd <- rep(0,length(t))
for (i in 1:length(sd)){
fish.age <- age[i]+rnorm(n,mean=0,sd=plaice_sd_coef[2]) # time of hatching with stochasticity, Julian day / 365 - mean = march 1st
L_t <- (L_hatch-Linf)*exp(-k*(phi_t[i]+fish.age-phi_hatch))+Linf # vbgr estimated length
sd[i] <- sd(L_t)
}
return(sd)
}
# define dab growth function
vbgrDab <- function(age) {
Linf <- 26.5093927   # estimated in "fit flatfish growths from DATRAS"
k <- 0.4846326    # estimated in "fit flatfish growths from DATRAS"
L_hatch <- mean(c(0.697,0.662)) # mean from Kennedy et al., 2007
u <- 0.23 # Amplitude of seasonality (same as cod)
w <- 0.91 # Timing of peak growth
t_hatch <- ((105+228)/2)/365 # time of hatching, Julian day / 365 - from fiskeatlas
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth at hatching
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
L_t <- (L_hatch-Linf)*exp(-k*(phi_t+age-phi_hatch))+Linf
return(L_t)
} #Original
vbgr.sdDab <- function(age,n){
#Parameters 2005-2010 for Western Baltic spring spawning herring (Gr철hsler et al., 2013)
Linf <- rnorm(n,mean=26.5093927,sd=dab_sd_coef[3]  )
k <- rnorm(n,0.4846326,dab_sd_coef[1] ) # from table 2 in Gr철hsler et al, 2013
L_hatch <- mean(c(0.697,0.662)) # mean from Kennedy et al., 2007
u <- 0.23 # Amplitude of seasonality (same as cod)
w <- 0.91 # Timing of peak growth
t_hatch <- ((105+228)/2)/365 # time of hatching, Julian day / 365 - from fiskeatlas
phi_hatch <- u*sin(2*pi*(t_hatch-w))/(2*pi) # seasonal variability in growth at hatching
t <- age+t_hatch
X_t <- t-floor(t) # time of year [0,1]
phi_t <- u*sin(2*pi*(X_t-w))/(2*pi) # seasonal variability in growth
sd <- rep(0,length(t))
for (i in 1:length(sd)){
fish.age <- age[i]+rnorm(n,mean=0,sd=dab_sd_coef[2] ) # time of hatching with stochasticity, Julian day / 365 - mean = march 1st
L_t <- (L_hatch-Linf)*exp(-k*(phi_t[i]+fish.age-phi_hatch))+Linf # vbgr estimated length
sd[i] <- sd(L_t)
}
return(sd)
}
Flatfish <- read.table(paste(data_wd,"N_est.flatfish.csv",sep=""),sep=';',header=TRUE)
Flatfish$yday <- round(Flatfish$jd*365)
names(Flatfish)[names(Flatfish)=="Species"] <- "species"
#####
# TIP: Run cod together
# Seal preference for cod
#####
gseal.cod <- gseal %>% filter(Species %in% c("cod"))
gseal.cod$my <- paste(gseal.cod$Month,'-',gseal.cod$Year)
samplings <- unique(gseal.cod$my)
month <- c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug",
"Sep","Oct","Nov","Dec")
width <- 10 # mm. width of the size classes
vec.lengths <- seq(width/2,1500+width/2,by=width)
n.lengths <- length(vec.lengths)
gseal.cod$size <- floor(gseal.cod$FL.with.SCF/width)*width+width/2
df.seal <- data.frame(l.class = rep(vec.lengths,length(samplings)),
n_eaten = rep(0,n.lengths*length(samplings)),
n =  rep(0,n.lengths*length(samplings)),
sampling = rep(samplings,each=n.lengths),
n_scat =  rep(0,n.lengths*length(samplings)),
year =  rep(0,n.lengths*length(samplings)))
cod_hatch <- ((16+197)/2)/365 # time of hatching, Julian day / 365 - spawning from Jan. to July (a bit arbitrary from H체ssy et al., 2011), average set to peak spawning
i=1
vec.lengths
dada <- gseal.cod %>% filter(my==samplings[i])
n_sca <- length(unique(dada$Scat))
date <- paste(dada$Year[1],'-',which(dada$Month[1]==month)[[1]],'-',15,sep="")
jday <- yday(date)/365
sizes <- c(vbgrCod(jday-cod_hatch),vbgrCod(jday-cod_hatch+1),vbgrCod(jday-cod_hatch+2),vbgrCod(jday-cod_hatch+3),
vbgrCod(jday-cod_hatch+4),vbgrCod(jday-cod_hatch+5),vbgrCod(jday-cod_hatch+6),vbgrCod(jday-cod_hatch+7))*10
ages <- c(0,1,2,3,4,5,6,7)
cod.i <- N_ageCod(Cod,ages,dada$Year[1])[jday*365,1:length(ages)]
sd<- c(vbgr.sdCod(jday-cod_hatch,100000),vbgr.sdCod(jday-cod_hatch+1,100000),vbgr.sdCod(jday-cod_hatch+2,100000),vbgr.sdCod(jday-cod_hatch+3,100000),
vbgr.sdCod(jday-cod_hatch+4,100000),vbgr.sdCod(jday-cod_hatch+5,100000),vbgr.sdCod(jday-cod_hatch+6,100000),vbgr.sdCod(jday-cod_hatch+7,100000))*10
if (min(sd)<0){
sd[sd<0] <-rep(0,length(sd[sd<0]))
}
?dnorm
cod.i[1]
sizes[1]
sd[1]
dnorm(vec.lengths,sizes[1],sd[1])
cod.i[1]*dnorm(vec.lengths,sizes[1],sd[1])
sum(dnorm(vec.lengths,sizes[1],sd[1]))
dnorm(vec.lengths,sizes[1],sd[1])/sum(dnorm(vec.lengths,sizes[1],sd[1]))
sum(dnorm(vec.lengths,sizes[1],sd[1])/sum(dnorm(vec.lengths,sizes[1],sd[1])))
cod.i[1]*dnorm(vec.lengths,sizes[1],sd[1])/sum(dnorm(vec.lengths,sizes[1],sd[1]))
